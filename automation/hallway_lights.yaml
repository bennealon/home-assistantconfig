- alias: "hallway motion daytime"
# Detects motion when
# light level below 15lux
# AND
# During the daytime
# Set light timer 10 mins
# Set ambient daytime lights on
  trigger:
    platform: state
    entity_id: binary_sensor.hallway_motion_sensor_motion
    to: "on"
  condition:
    - condition: numeric_state
      entity_id: sensor.hallway_motion_sensor_light_level
      below: 25
    - condition: sun
      after: sunrise
      after_offset: "+00:30:00"
    - condition: sun
      before: sunset
      before_offset: "-00:30:00"
  action:
  # cancel any pre-existing.
    - service: timer.cancel
      data_template:
        entity_id: timer.hallway_light
    - service: timer.start
      data:
        entity_id: timer.hallway_light
        duration: '00:01:00'
    - service: hue.hue_activate_scene
      data:
        group_name: "Hallway"
        scene_name: "Ambient daytime"

- alias: "hallway motion evening"
# Detects motion when
# light level below 15lux
# AND
# During the evening (need to use OR here for the two ends of the day)
# Set light timer 1 mins
# Set ambient evening lights on
  trigger:
    platform: state
    entity_id: binary_sensor.hallway_motion_sensor_motion
    to: "on"
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.hallway_motion_sensor_light_level
        below: 25
      - condition: or
        conditions:
        - condition: sun
          after: sunset
          after_offset: "-00:30:00"
        - condition: sun
          before: sunrise
          before_offset: "+00:30:00"
  action:
# cancel any pre-existing.
    - service: timer.cancel
      data_template:
        entity_id: timer.hallway_light
    - service: timer.start
      data_template:
        entity_id: timer.hallway_light
        duration: '00:05:00'       
    - service: hue.hue_activate_scene
      data:
        group_name: "Hallway"
        scene_name: "Ambient evening"

- alias: "Hallway motion timer finished dimmed"
# Light timer finished
# If during the dark hours and before the light_off_time, then revert to ambient dimmed
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.hallway_light
  condition:
    condition: or
    conditions:
      - condition: and
        conditions: 
          # After Sunset (and before midnight)
        - condition: sun
          after: sunset
          after_offset: "-00:30:00"
          # TRUE if input_time.hour < 12 OR now.time < input_time.time
        - condition: template
          value_template: "{{ ( state_attr('input_datetime.hallway_light_off_time', 'hour') | int < 12 ) or ( (now().hour*60*60 + now().minute*60 + now().second) < state_attr('input_datetime.hallway_light_off_time', 'timestamp') | int ) }}"
      - condition: and
        conditions:
          # Before sunrise (and after midnight)
        - condition: sun
          before: sunrise
          before_offset: "+00:30:00"
          # TRUE if input_time.hour < 12 AND now.time < input_time.time
        - condition: template
          value_template: "{{ ( state_attr('input_datetime.hallway_light_off_time', 'hour') | int < 12 ) and ( (now().hour*60*60 + now().minute*60 + now().second) < state_attr('input_datetime.hallway_light_off_time', 'timestamp') | int ) }}"
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: "Hallway"
        scene_name: "Ambient evening dimmed"

- alias: "Hallway motion timer finished off"
# Light timer finished
# If during the dark hours and after the light_off_time, then revert to ambient dimmed
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.hallway_light
  condition:
    condition: or
    conditions:
      - condition: and
        conditions: 
          # After Sunset (and before midnight)
        - condition: sun
          after: sunset
          after_offset: "-00:30:00"
          # TRUE if input_time.hour >= 12 AND now.time >= input_time.time
        - condition: template
          value_template: "{{ ( state_attr('input_datetime.hallway_light_off_time', 'hour') | int >= 12 ) and ( (now().hour*60*60 + now().minute*60 + now().second) >= state_attr('input_datetime.hallway_light_off_time', 'timestamp') | int ) }}"
      - condition: and
        conditions:
          # Before sunrise (and after midnight)
        - condition: sun
          before: sunrise
          before_offset: "+00:30:00"
          # TRUE if input_time.hour >= 12 AND now.time >= input_time.time
        - condition: template
          value_template: "{{ ( state_attr('input_datetime.hallway_light_off_time', 'hour') | int >= 12 ) or ( (now().hour*60*60 + now().minute*60 + now().second) >= state_attr('input_datetime.hallway_light_off_time', 'timestamp') | int ) }}"
      - condition: and
        conditions: 
        # any daylight hours
        - condition: sun
          after: sunrise
          after_offset: "+00:30:00"
        - condition: sun
          before: sunset
          before_offset: "-00:30:00"
  action:
    - service: light.turn_off
      data:
        entity_id: light.hallway
        transition: 30

- alias: "hallway dimmed sunset"
# At 30 mins before sunset WHEN lights are off
# Set light to ambient evening dimmed
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
  condition:
    - condition: state
      entity_id: light.hallway
      state: 'off'
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: "Hallway"
        scene_name: "Ambient evening dimmed"

- alias: "hallway light off time"
# At time specified
# Turn lights off with 30 seconds fade.
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (state_attr('input_datetime.hallway_light_off_time', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
    - service: light.turn_off
      data:
        entity_id: light.hallway
        transition: 30