- alias: "Living room motion daytime"
  # Detects motion when
  # light level below 30lux
  # AND
  # During the daytime
  # Set light timer 10 mins
  # Set wall lights on
  trigger:
    platform: state
    entity_id: binary_sensor.living_room_sensor_motion
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.livingroom_motion_enabled
      state: "on"
    - condition: numeric_state
      entity_id: sensor.living_room_sensor_light_level
      below: 30
    - condition: sun
      after: sunrise
      after_offset: "+00:30:00"
    - condition: sun
      before: sunset
      before_offset: "-00:30:00"
  action:
    # cancel any pre-existing.
    - service: timer.cancel
      data_template:
        entity_id: timer.living_room_light
    - service: timer.start
      data:
        entity_id: timer.living_room_light
        duration: "00:10:00"
    - service: hue.activate_scene
      data:
        entity_id: "scene.living_room_ambient_wall"

- alias: "Living room motion evening"
  # Detects motion when
  # light level below 30lux
  # AND
  # During the evening (need to use OR here for the two ends of the day)
  # Set light timer 3 mins between 01:00 -> 06:00, otherwise 15 mins.
  # Set ambient lights on
  trigger:
    platform: state
    entity_id: binary_sensor.living_room_sensor_motion
    to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.livingroom_motion_enabled
        state: "on"
      - condition: numeric_state
        entity_id: sensor.living_room_sensor_light_level
        below: 30
      - condition: or
        conditions:
          - condition: sun
            after: sunset
            after_offset: "-00:30:00"
          - condition: sun
            before: sunrise
            before_offset: "+00:30:00"
  action:
    # cancel any pre-existing.
    - service: timer.cancel
      data_template:
        entity_id: timer.living_room_light
    - service: timer.start
      data_template:
        entity_id: timer.living_room_light
        duration: >
          {% if now().hour >= 1 and now().hour < 6 %}
            00:03:00
          {% else %}
            00:15:00
          {% endif %}
    - service: hue.activate_scene
      data:
        entity_id: "scene.living_room_ambient_lamps"

- alias: "Living room motion timer finished dimmed"
  # Light timer finished
  # If during the dark hours and before the light_off_time, then revert to ambient dimmed
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.living_room_light
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          # After Sunset (and before midnight)
          - condition: sun
            after: sunset
            after_offset: "-00:30:00"
            # TRUE if input_time.hour < 12 OR now.time < input_time.time
          - condition: template
            value_template: "{{ ( state_attr('input_datetime.livingroom_light_off_time', 'hour') | int < 12 ) or ( (now().hour*60*60 + now().minute*60 + now().second) < state_attr('input_datetime.livingroom_light_off_time', 'timestamp') | int ) }}"
      - condition: and
        conditions:
          # Before sunrise (and after midnight)
          - condition: sun
            before: sunrise
            before_offset: "+00:30:00"
            # TRUE if input_time.hour < 12 AND now.time < input_time.time
          - condition: template
            value_template: "{{ ( state_attr('input_datetime.livingroom_light_off_time', 'hour') | int < 12 ) and ( (now().hour*60*60 + now().minute*60 + now().second) < state_attr('input_datetime.livingroom_light_off_time', 'timestamp') | int ) }}"
  action:
    - service: hue.activate_scene
      data:
        entity_id: "scene.living_room_ambient_lamps_dimmed"

- alias: "Living room motion timer finished off"
  # Light timer finished
  # If during the dark hours and after the light_off_time, then revert to ambient dimmed
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.living_room_light
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          # After Sunset (and before midnight)
          - condition: sun
            after: sunset
            after_offset: "-00:30:00"
            # TRUE if input_time.hour >= 12 AND now.time >= input_time.time
          - condition: template
            value_template: "{{ ( state_attr('input_datetime.livingroom_light_off_time', 'hour') | int >= 12 ) and ( (now().hour*60*60 + now().minute*60 + now().second) >= state_attr('input_datetime.livingroom_light_off_time', 'timestamp') | int ) }}"
      - condition: and
        conditions:
          # Before sunrise (and after midnight)
          - condition: sun
            before: sunrise
            before_offset: "+00:30:00"
            # TRUE if input_time.hour >= 12 AND now.time >= input_time.time
          - condition: template
            value_template: "{{ ( state_attr('input_datetime.livingroom_light_off_time', 'hour') | int >= 12 ) or ( (now().hour*60*60 + now().minute*60 + now().second) >= state_attr('input_datetime.livingroom_light_off_time', 'timestamp') | int ) }}"
      - condition: and
        conditions:
          # any daylight hours
          - condition: sun
            after: sunrise
            after_offset: "+00:30:00"
          - condition: sun
            before: sunset
            before_offset: "-00:30:00"
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room
        transition: 30

- alias: "Living room dimmed sunset"
  # At 30 mins before sunset WHEN light timer is idle (noone is about), and motion is enabled (otherwise dont override)
  # Set light to ambient lamps dimmed
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
  condition:
    - condition: state
      entity_id: input_boolean.livingroom_motion_enabled
      state: "on"
    - condition: state
      entity_id: timer.living_room_light
      state: "idle"
  action:
    - service: hue.activate_scene
      data:
        entity_id: "scene.living_room_ambient_lamps_dimmed"

- alias: "living room light off time"
  # At time specified
  # If the light timer is idle (noone is about)
  # Turn lights off with 30 seconds fade.
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (state_attr('input_datetime.livingroom_light_off_time', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  condition:
    - condition: state
      entity_id: timer.living_room_light
      state: "idle"
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room
        transition: 30

- alias: "On living room motion disabled"
  # When changing living room motion enabeld to off
  # Cancel any light timers to prevent further automation.
  trigger:
    platform: state
    entity_id: input_boolean.livingroom_motion_enabled
    to: "off"
  action:
    - service: timer.cancel
      data_template:
        entity_id: timer.living_room_light
