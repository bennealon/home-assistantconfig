## octopus go rest template ##

# - platform: rest
#   name: Go rates today
#   resource_template: >-
#     {% set region = 'F' %}
#     {% set from = as_timestamp(as_timestamp(now())|timestamp_custom('%Y-%m-%d') + 'T00:00:00') %}
#     {% set to = from + 24 * 60 * 60 %}
#     {% set format = '%Y-%m-%dT%H:%M:%SZ' %}
#     https://api.octopus.energy/v1/products/AGILE-18-02-21/electricity-tariffs/E-1R-AGILE-18-02-21-{{ region }}/standard-unit-rates/?period_from={{ from|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}&period_to={{ to|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}
#   value_template: >-
#     {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
#     {% if value_json.results is defined and value_json.results|count > 0 %}
#       {{ as_timestamp(value_json.results[-1].valid_from)|timestamp_custom('%Y-%m-%d') }}
#     {% else %}
#       Unknown
#     {% endif %}
#   json_attributes:
#     - "results"

# - platform: rest
#   name: Go rates off peak
#   resource_template: >-
#     {% set region = 'F' %}
#     {% set from = as_timestamp(as_timestamp(now())|timestamp_custom('%Y-%m-%d') + 'T00:30:00') %}
#     {% set to = from + 4 %}
#     {% set format = '%Y-%m-%dT%H:%M:%SZ' %}
#     https://api.octopus.energy/v1/products/AGILE-18-02-21/electricity-tariffs/E-1R-AGILE-18-02-21-{{ region }}/standard-unit-rates/?period_from={{ from|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}&period_to={{ to|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}
#   value_template: >-
#     {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
#     {% if value_json.results is defined and value_json.results|count > 0 %}
#       {{ as_timestamp(value_json.results[-1].valid_from)|timestamp_custom('%Y-%m-%d') }}
#     {% else %}
#       Unknown
#     {% endif %}
#   json_attributes:
#     - "results"

# - platform: template
#   sensors:
#     go_current_rate:
#       friendly_name: Go current rate
#       icon_template: mdi:flash
#       value_template: >-
#         {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
#         {{ ((state_attr('sensor.go_rates_today', 'results')|selectattr('valid_from', 'eq', from)|first).value_inc_vat)|round(2) }}
#       unit_of_measurement: 'p/kWh'
#       attribute_templates:
#         valid_from: >-
#           {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
#           {{ (state_attr('sensor.go_rates_today', 'results')|selectattr('valid_from', 'eq', from)|first).valid_from }}
#         valid_to: >-
#           {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor')|int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
#           {{ (state_attr('sensor.go_rates_today', 'results')|selectattr('valid_from', 'eq', from)|first).valid_to }}

- platform: rest
  name: Gas consumption
  resource: !secret octopus_gas_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T00:00:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T23:59:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"

- platform: rest
  name: Electricity consumption
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T00:00:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T23:59:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"

- platform: rest
  name: Electricity consumption midnight
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T00:00:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T00:29:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"

- platform: rest
  name: Electricity consumption off peak
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T00:30:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T04:29:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"

- platform: rest
  name: Electricity consumption graveyard
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + '04:30:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T08:29:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"


- platform: rest
  name: Electricity consumption morning
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + '08:30:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T12:29:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"

- platform: rest
  name: Electricity consumption afternoon
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + '12:30:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T16:29:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"


- platform: rest
  name: Electricity consumption evening
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + '16:30:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T20:29:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"

- platform: rest
  name: Electricity consumption night
  resource: !secret octopus_electricity_api
  headers:
    Authorization: !secret octopus_auth
  params:
    period_from: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + '20:30:00' }}"
    period_to: "{{ as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') + 'T23:59:59' }}"
  value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
  unit_of_measurement: 'kWh'
  device_class: energy
  state_class: total_increasing
  json_attributes:
    - "results"

- platform: template
  sensors:
    electricity_cost:
      friendly_name: Electricity cost
      icon_template: mdi:cash-multiple
      value_template: >-
        {% set standing_charge = 48.65 %}
        {% set usage = state_attr('sensor.electricity_consumption', 'results') %}
        {% if usage is defined and usage|count == 48 %}
          {% set ns = namespace(total=0) %}
          {% for p in range(0, 48) %}
            {% set time = as_timestamp(usage[p].interval_start)|timestamp_custom('%H:%M:%S') %}
            {% set unit_price = 33.75 %}
            {% if '00:30:00' <= time < '04:30:00' %}
              {% set unit_price = 7.5 %}
            {% endif %}
            {% set ns.total = ns.total + (usage[p].consumption * unit_price / 100) %}
          {% endfor %}
          {{ (ns.total + standing_charge / 100)|round(2) }}
        {% else %}
          Unknown
        {% endif %}
      unit_of_measurement: GBP
      device_class: monetary


- platform: template
  sensors:
    electricity_cost_off_peak:
      friendly_name: Electricity cost off peak
      icon_template: mdi:cash-multiple
      value_template: >-
        {% set standing_charge = 0 %}
        {% set usage = state_attr('sensor.electricity_consumption_off_peak', 'results') %}
        {% if usage is defined and usage|count == 8 %}
          {% set ns = namespace(total=0) %}
          {% for p in range(0, 8) %}
            {% set time = as_timestamp(usage[p].interval_start)|timestamp_custom('%H:%M:%S') %}
            {% set unit_price = 7.5 %}
            {% set ns.total = ns.total + (usage[p].consumption * unit_price / 100) %}
          {% endfor %}
          {{ (ns.total + standing_charge / 100)|round(2) }}
        {% else %}
          Unknown
        {% endif %}
      unit_of_measurement: GBP
      device_class: monetary

- platform: template
  sensors:
    gas_cost:
      friendly_name: Gas cost
      icon_template: mdi:cash-multiple
      value_template: >-
        {% set unit_price = 7.22 %}
        {% set standing_charge = 27.22 %}
        {% set calorific_value = 40.1 %}
        {% set usage = state_attr('sensor.gas_consumption', 'results') %}
        {% if usage is defined and usage|count == 48 %}
          {{ ((states('sensor.gas_consumption') | float * 1.02264 * calorific_value / 3.6) * unit_price / 100 + standing_charge / 100)|round(2) }}
        {% else %}
          Unknown
        {% endif %}
      device_class: monetary
      unit_of_measurement: GBP